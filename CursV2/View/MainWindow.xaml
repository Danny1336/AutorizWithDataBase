<Window x:Class="CursV2.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CursV2"
        
        mc:Ignorable="d"
        Title="MainWindow" MaxHeight="600" MaxWidth="1000" Height="600" Width="1000" ResizeMode="NoResize" WindowStyle="None" WindowStartupLocation="CenterScreen" Background="#222326">
	<Window.Resources>
        <ControlTemplate x:Key="TopMenuButtons" TargetType="Button">
            <Grid Name="Btn" Height="40" Margin="20 0 0 0">
                <Border>
                    <Grid>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" FontSize="23" VerticalAlignment="Center" >
                        <Label.Style>
                            <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="#B1C5D4"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsMouseOver, ElementName=Btn}" Value="true"> <!-- Триггер с изменением свойства (btn) при наведении (IsMouseOver) -->
                                        <Setter Property="Foreground" Value="White"></Setter> <!-- Свойства, которые будут срабатывать -->
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                        Mode=FindAncestor, AncestorType={x:Type Button}},Path=IsPressed}" Value="True">
                                        <Setter Property="Foreground" Value="Gray"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource 
                                        Mode=FindAncestor, AncestorType={x:Type Button}},Path=IsFocused}" Value="True">
                                        <Setter Property="Foreground" Value="White"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                        <Label Content="{TemplateBinding Content}" Background="Transparent" 
                           Margin="-3,0,0,0" VerticalAlignment="Center" 
                           FontSize="23" FontWeight="Bold">
                            <Label.Style>
                            <Style TargetType="Label">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type Button}}, 
                                            Path=IsFocused}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <BlurEffect Radius="25"/>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Label.Style>
                        </Label>
                    </Grid>
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsPressed}" Value="True">
                                    <Setter Property="Margin" Value="0, 2, 0, 0"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                  
                </Border>
            </Grid>
        </ControlTemplate>
       
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
			<ColumnDefinition Width="170"/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Frame Grid.ColumnSpan="10" Grid.RowSpan="10" NavigationUIVisibility="Hidden" Content="{Binding CurPage}"/>

        <Grid Name="TopMenu" Grid.Row="0" Grid.ColumnSpan="2">

            <Border Name="Border1" BorderThickness="1" BorderBrush="Transparent" Background="Black" Opacity="0.6"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 10 0">
                <Button Template="{StaticResource ResourceKey=TopMenuButtons}" Click="Exit" Content="Выход"></Button>
            </StackPanel>
        </Grid>
        <Grid Name="SlideMenu" Grid.Row="1" HorizontalAlignment="Left">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Width" Value="170"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=OpenCloseSlideMenuBtn}" Value="True">
                            <Setter Property="Width" Value="60"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Border BorderThickness="1 0 1 1" BorderBrush="Transparent"/>
            <Border Background="Black" Opacity="0.6"/>

        </Grid>
        <Frame x:FieldModifier="public" Grid.Row="1" Grid.ColumnSpan="2" NavigationUIVisibility="Hidden" Name="ButtonFrame" Source="\View\Menu.xaml"></Frame>
		<Frame Grid.Column="1" Grid.Row="1" NavigationUIVisibility="Hidden" Name="MainFrame"></Frame>
    </Grid>
</Window>
